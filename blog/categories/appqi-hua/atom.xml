<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: APP企畫 | StevenKo's Blog]]></title>
  <link href="http://StevenKo.github.io/blog/categories/appqi-hua/atom.xml" rel="self"/>
  <link href="http://StevenKo.github.io/"/>
  <updated>2014-06-15T21:27:39+08:00</updated>
  <id>http://StevenKo.github.io/</id>
  <author>
    <name><![CDATA[Steven Ko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[成功APP企畫 -- 第三步，衡量團隊能力]]></title>
    <link href="http://StevenKo.github.io/blog/2014/06/12/app-develop-team/"/>
    <updated>2014-06-12T13:33:08+08:00</updated>
    <id>http://StevenKo.github.io/blog/2014/06/12/app-develop-team</id>
    <content type="html"><![CDATA[<center>
<img style="-webkit-user-select: none;" src="http://farm9.static.flickr.com/8083/8351116782_a28e9e25d0.jpg" width="500" height="376">  
</center>


<center>
photo credit: <a href="http://www.flickr.com/photos/steffen_ramsaier/8351116782/">sramses177</a> via <a href="http://photopin.com">photopin</a> <a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>
</center>


<p></p>

<p>要打造一個成功的APP, 一定要好好評估團隊的能力, 不論在程式開發, 設計的專業程度，乃至於團隊的合作默契，都是很重要的</p>

<ol>
<li><p>程式開發能力: 依照團隊的開發能力評估，適不適合做構想中的APP。理想上，可以選一個確信在能力範圍人可以完成的APP，甚至是帶點挑戰性的, 但是千萬別只有一兩個工程師，卻選擇難度過高,或者複雜性很高的APP構想</p>

<p> 選擇一個過難的構想，團隊的工程師可能一天到晚都在查文件，學新技術，那開發的期限就會拖長; 複雜度很高，工程師可能要每天爆肝寫程式, 卻看不到收尾的期限</p></li>
<li><p>設計的專業: 在軟體開發愈來愈競爭的時代，不只在功能上要符合使用者的期待, 在介面設計上也要多加考量。設計要儘量符合 Android 或 iOS的介面規範，因為一個APP可能在多平台上運行，符合規範的APP在平版和手機之間會有更好調適表現，另外也比較有可能得到平台商(Google, APPLE)的推薦</p>

<p> 團隊的設計要不斷的精進，若是有設計師的話，請他多去了解市場上成功的APP在設計上有什麼過人之處，也要請他熟讀介面設計規範(<a href="https://developer.android.com/design/index.html">Android</a>,<a href="https://developer.apple.com/library/ios/documentation/userexperience/conceptual/MobileHIG/index.html">iOS</a>)。好的介面要經過反覆溝通，設計師不能總是堅持己見或是要求一些難以實做的特效，如此都會讓APP難產</p></li>
<li><p>合作默契: 這可能是最容易被忽略，但也是相當重要的要素。 很常看到一些朋友在彼此認識不深的情況下，就決定攜手合作，不了解彼此的性格，處事態度，行事作風，在合作的過程中，會招致很多的摩擦</p>

<p> 最好的合作情況是彼此有一些了解，可以信賴，再不然也得知道對方之前做過什麼，是不是一個實事求是，可以溝通的人</p></li>
<li><p>團隊承諾: 除了考量以上諸項之外，團隊對於這個APP的開發，是不是真的盡心盡力也會影響整個開發，一群人如果同心協力的話，每隔一段時間就有成果的展現，較能順利地如期開發完成, 反過來若是大家會計較的話，很可能不是一個適合共事的團隊，這樣要完成一個好APP, 大概就要問天了&hellip;.</p></li>
</ol>


<p>團隊的評估是很重要的，能不能順利的完成開發，大概從團隊的執行力就可以看出來了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[成功APP企畫 -- 第二步，思考獲利模式]]></title>
    <link href="http://StevenKo.github.io/blog/2014/06/11/app-develop-business-model/"/>
    <updated>2014-06-11T20:48:04+08:00</updated>
    <id>http://StevenKo.github.io/blog/2014/06/11/app-develop-business-model</id>
    <content type="html"><![CDATA[<center>
<img style="-webkit-user-select: none;" src="http://farm3.staticflickr.com/2291/2397388906_ce5c59d73c.jpg" width="500" height="376">
</center>


<center>
<a href="http://www.flickr.com/photos/pfala/2397388906/">pfala</a> via <a href="http://photopin.com">photopin</a> <a href="http://creativecommons.org/licenses/by-nd/2.0/">cc</a>
</center>


<p></p>

<p>APP 主要的獲利來源有以下幾種:</p>

<ol>
<li><p>付費: 使用者到應用商店裡購買, 下載卻使用的APP。採用這種模式的APP通常是有很強大的獨特功能, 或是獨有的內容。針對想要靠這種模式獲利的開發商，通常會出免費版本與付費版本兩種，免費版本讓使用者體驗，並達到宣傳其特色的效果</p></li>
<li><p>廣告: 靠廣告獲利的APP, 通常是以免費發佈，在APP的使用者使用的同時，播放廣告。廣告的收益計算方式有CPM(播放千次廣告收益), CPC(點擊單次廣告收益), 將來也許還會有CPA(每次讓使用者完成特定行為收益, 如:下載&hellip;等等)。</p></li>
</ol>


<p>  以國內來說： CPC, CPM的獲利是NT$1.5~2.5之間, 我試過很多家廣告商, 大概都是這個範圍, 當然不同的APP, 可能會有不同的價格</p>

<p>  所以當要選擇以廣告為獲利來源時，請仔細思考，APP會有多少的廣告展示量? 如果即使在使用者很多的情況下, 也不會太大的廣告展示量，那廣告模式是不太適合的</p>

<ol>
<li><p>應用內購買: 免費讓使用者下載, 但當使用者要使用特定功能 or 升級為專業版 or 購買道具時,則需另外付費，這也是遊戲APP開發商最常採取的模式。不同於有付費型的APP, 在發佈的同時利用一款免費APP, 讓使用者體驗； 應用內購買APP直接在APP裡大力推廣，希望使用者付費。目前這是愈來愈多開發商採行的策略！</p></li>
<li><p>附合模式：以上三種模式互相結合。有的開發商可能會出免費版與完整版APP, 這個免費的APP既播放廣告, 又同時也鼓勵使用者購買去廣告版本 or 升級去廣告之類的。</p></li>
</ol>


<p>  不管是採行那一種模式, 維持免費APP和付費APP的平衡是很重要的, 不能讓使用者覺得付費得不到應有的價值, 也不能讓使用者覺得免費版的不適用, 這樣使用者可能一下載就馬上移除了</p>

<ol>
<li>不以馬上獲利, 而以獲取使用者為目標: 當然有的APP不是要馬上獲利的，如facebook， 不會在上線的第一天就播放廣告。它希望吸引更多的使用者到平台上來，這樣其服務會更有價值</li>
</ol>


<p>要做一個成功的APP, 一定要考量好獲利模式, 如果不經仔細地思索，就選一個項目開始做, 之後才當初所想要採行的獲利模式行不通, 那時候可能要花費加倍的力氣去更正它</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[成功APP企畫 -- 第一步，市場調查]]></title>
    <link href="http://StevenKo.github.io/blog/2014/06/10/app-develop-market-research/"/>
    <updated>2014-06-10T16:02:01+08:00</updated>
    <id>http://StevenKo.github.io/blog/2014/06/10/app-develop-market-research</id>
    <content type="html"><![CDATA[<pre><code>很幸運地開發過好幾款下載超過百萬的APP,想把自己的以前開發的心得,採取的手法, 記錄整理下來,做為之後開發的參考
</code></pre>

<p>很多想開發APP的人，心裡有一個idea, 就為這個idea著迷, 想著要怎麼賺錢, 怎麼吸引使用者, 甚至連使用者來了之後, 產品要怎麼樣變形都開始考慮&hellip;..然後就沒頭沒腦的招募工程師，花費時間開發，結果三個月後才發現做出來的產品不符合使用者的期待&hellip;</p>

<p>其實在開發之前，最要緊的第一步是從已經上線的產品取經, 做好<a href="http://zh.wikipedia.org/wiki/%E5%B8%82%E5%A0%B4%E8%AA%BF%E6%9F%A5">市場調查</a>(以下依重要程度排序)：</p>

<ol>
<li><p>市場上的APP提供了那些<a href="http://wiki.mbalib.com/zh-tw/%E4%BA%A7%E5%93%81%E4%BB%B7%E5%80%BC">價值</a>: 目前市面上開於這個產業，已經有那些APP，它們的為使用者產生提供那些價值？吸引使用者的關鍵是什麼？使用者為什麼會想用 or 不用？</p>

<p> 要學著站在巨人的肩膀上，利用別人的經驗，如此才能開發出比之前更好的產品</p></li>
<li><p>詢問目標客群意見: 透過詢問目標客群，可以檢驗所構思的產品是不是使用者會想用的，甚至是會欲罷不能的愛上</p></li>
<li><p>市場上產品的<a href="http://wiki.mbalib.com/wiki/%E7%9B%88%E5%88%A9%E6%A8%A1%E5%BC%8F">營利模式</a>：市面上的這些產品是如何營利(Business Model)？靠廣告 or 單次購買 or 應用內購買, 周邊商品購買？ 如果從以前的市場上的產品發現，市場規模不大 or 採取這樣的營利模式很難收支平衡，那就要慎重思考這個產品在營收方面會不會有問題</p></li>
<li><p>市場競爭程度：如果市場上已經有"霸主"存在，那要推廣產品可能就會很困難</p>

<ul>
<li>最佳的情況: 選大市場, 但市場上還沒有直接競爭者</li>
<li>次佳的情況: 選大市場，但競爭者的能力不怎麼樣</li>
<li>第三佳情況: 選大市場, 但競爭很強烈 or 選小市場，但沒競爭</li>
<li>最差情況: 選小市場，但同時競爭者卻又很多</li>
</ul>
</li>
<li><p>平台評估： 除了傳統的網頁，現在主流的手持裝置平台有 Android 和 iOS, 而兩個平台又各有 手機 和 平台 兩種, 將來可能還有穿戴式裝置</p>

<p> 一開始很忌緯全部的平台都開發，在不了解使用者是否會想用產品前，投入大量的資源開發，很可能會造成資源上的浪費, 應該在投入之前，先思考想要開發的產品,適合在那個平台上發佈，在經過反覆討論後，選擇一個最有利的平台開發, 等到開發出<a href="http://wiki.mbalib.com/zh-tw/%E6%9C%80%E7%AE%80%E5%8F%AF%E8%A1%8C%E4%BA%A7%E5%93%81">最簡可行產品</a>後，再投入資源做其它的開發</p></li>
<li><p>技術調查： 目前市場上有那些技術，線上的產品是運用那些工具？</p>

<p> 評估要採用那些工具與技術，以及團隊是否有能力掌握這些工具，要花費的資源(錢 &amp; 時間)是多少&hellip; 現在技術很發達，要做到一個功能，可能同時有好幾套工具，評估後採取最適合的工具是很重要的</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
